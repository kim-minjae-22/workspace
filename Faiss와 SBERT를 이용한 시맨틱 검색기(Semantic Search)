{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!pip install faiss-gpu\n!pip install -U sentence-transformers","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:04:31.712355Z","iopub.execute_input":"2024-11-05T03:04:31.712745Z","iopub.status.idle":"2024-11-05T03:04:59.728641Z","shell.execute_reply.started":"2024-11-05T03:04:31.712700Z","shell.execute_reply":"2024-11-05T03:04:59.727720Z"}},"outputs":[{"name":"stdout","text":"Collecting faiss-gpu\n  Downloading faiss_gpu-1.7.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (1.4 kB)\nDownloading faiss_gpu-1.7.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (85.5 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m85.5/85.5 MB\u001b[0m \u001b[31m18.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: faiss-gpu\nSuccessfully installed faiss-gpu-1.7.2\nCollecting sentence-transformers\n  Downloading sentence_transformers-3.2.1-py3-none-any.whl.metadata (10 kB)\nRequirement already satisfied: transformers<5.0.0,>=4.41.0 in /opt/conda/lib/python3.10/site-packages (from sentence-transformers) (4.45.1)\nRequirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (from sentence-transformers) (4.66.4)\nRequirement already satisfied: torch>=1.11.0 in /opt/conda/lib/python3.10/site-packages (from sentence-transformers) (2.4.0)\nRequirement already satisfied: scikit-learn in /opt/conda/lib/python3.10/site-packages (from sentence-transformers) (1.2.2)\nRequirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from sentence-transformers) (1.14.1)\nRequirement already satisfied: huggingface-hub>=0.20.0 in /opt/conda/lib/python3.10/site-packages (from sentence-transformers) (0.25.1)\nRequirement already satisfied: Pillow in /opt/conda/lib/python3.10/site-packages (from sentence-transformers) (10.3.0)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.20.0->sentence-transformers) (3.15.1)\nRequirement already satisfied: fsspec>=2023.5.0 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.20.0->sentence-transformers) (2024.6.1)\nRequirement already satisfied: packaging>=20.9 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.20.0->sentence-transformers) (21.3)\nRequirement already satisfied: pyyaml>=5.1 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.20.0->sentence-transformers) (6.0.2)\nRequirement already satisfied: requests in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.20.0->sentence-transformers) (2.32.3)\nRequirement already satisfied: typing-extensions>=3.7.4.3 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.20.0->sentence-transformers) (4.12.2)\nRequirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch>=1.11.0->sentence-transformers) (1.13.3)\nRequirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch>=1.11.0->sentence-transformers) (3.3)\nRequirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch>=1.11.0->sentence-transformers) (3.1.4)\nRequirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from transformers<5.0.0,>=4.41.0->sentence-transformers) (1.26.4)\nRequirement already satisfied: regex!=2019.12.17 in /opt/conda/lib/python3.10/site-packages (from transformers<5.0.0,>=4.41.0->sentence-transformers) (2024.5.15)\nRequirement already satisfied: safetensors>=0.4.1 in /opt/conda/lib/python3.10/site-packages (from transformers<5.0.0,>=4.41.0->sentence-transformers) (0.4.5)\nRequirement already satisfied: tokenizers<0.21,>=0.20 in /opt/conda/lib/python3.10/site-packages (from transformers<5.0.0,>=4.41.0->sentence-transformers) (0.20.0)\nRequirement already satisfied: joblib>=1.1.1 in /opt/conda/lib/python3.10/site-packages (from scikit-learn->sentence-transformers) (1.4.2)\nRequirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from scikit-learn->sentence-transformers) (3.5.0)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging>=20.9->huggingface-hub>=0.20.0->sentence-transformers) (3.1.2)\nRequirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch>=1.11.0->sentence-transformers) (2.1.5)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.20.0->sentence-transformers) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.20.0->sentence-transformers) (3.7)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.20.0->sentence-transformers) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.20.0->sentence-transformers) (2024.8.30)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from sympy->torch>=1.11.0->sentence-transformers) (1.3.0)\nDownloading sentence_transformers-3.2.1-py3-none-any.whl (255 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m255.8/255.8 kB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0ma \u001b[36m0:00:01\u001b[0m\n\u001b[?25hInstalling collected packages: sentence-transformers\nSuccessfully installed sentence-transformers-3.2.1\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"# 데이터 로드","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport os\nimport pandas as pd\nimport urllib.request\nimport faiss\nimport time\nfrom sentence_transformers import SentenceTransformer","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:04:59.730851Z","iopub.execute_input":"2024-11-05T03:04:59.731335Z","iopub.status.idle":"2024-11-05T03:05:21.788431Z","shell.execute_reply.started":"2024-11-05T03:04:59.731290Z","shell.execute_reply":"2024-11-05T03:05:21.787675Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sentence_transformers/cross_encoder/CrossEncoder.py:13: TqdmExperimentalWarning: Using `tqdm.autonotebook.tqdm` in notebook mode. Use `tqdm.tqdm` instead to force console mode (e.g. in jupyter console)\n  from tqdm.autonotebook import tqdm, trange\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"urllib.request.urlretrieve(\"https://raw.githubusercontent.com/ukairia777/tensorflow-nlp-tutorial/main/19.%20Topic%20Modeling%20(LDA%2C%20BERT-Based)/dataset/abcnews-date-text.csv\", filename=\"abcnews-date-text.csv\")\n\ndf = pd.read_csv(\"abcnews-date-text.csv\")\ndata = df.headline_text.to_list()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:05:50.801662Z","iopub.execute_input":"2024-11-05T03:05:50.802885Z","iopub.status.idle":"2024-11-05T03:05:52.131389Z","shell.execute_reply.started":"2024-11-05T03:05:50.802838Z","shell.execute_reply":"2024-11-05T03:05:52.130587Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"# 상위 5개의 샘플 출력\ndata[:5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:05:52.983875Z","iopub.execute_input":"2024-11-05T03:05:52.984540Z","iopub.status.idle":"2024-11-05T03:05:52.991798Z","shell.execute_reply.started":"2024-11-05T03:05:52.984499Z","shell.execute_reply":"2024-11-05T03:05:52.990726Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"['aba decides against community broadcasting licence',\n 'act fire witnesses must be aware of defamation',\n 'a g calls for infrastructure protection summit',\n 'air nz staff in aust strike for pay rise',\n 'air nz strike to affect australian travellers']"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"print('총 샘플의 개수 :', len(data))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:05:53.703556Z","iopub.execute_input":"2024-11-05T03:05:53.704417Z","iopub.status.idle":"2024-11-05T03:05:53.709387Z","shell.execute_reply.started":"2024-11-05T03:05:53.704373Z","shell.execute_reply":"2024-11-05T03:05:53.708467Z"}},"outputs":[{"name":"stdout","text":"총 샘플의 개수 : 1082168\n","output_type":"stream"}],"execution_count":5},{"cell_type":"markdown","source":"# SBERT 임베딩","metadata":{}},{"cell_type":"code","source":"model = SentenceTransformer('distilbert-base-nli-mean-tokens')\nencoded_data = model.encode(data)\nprint('임베딩 된 벡터 수 :', len(encoded_data))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:05:55.392109Z","iopub.execute_input":"2024-11-05T03:05:55.392802Z","iopub.status.idle":"2024-11-05T03:13:31.446086Z","shell.execute_reply.started":"2024-11-05T03:05:55.392758Z","shell.execute_reply":"2024-11-05T03:13:31.445145Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"modules.json:   0%|          | 0.00/229 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"688c62d7822643cb8e18a127d84a2a94"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config_sentence_transformers.json:   0%|          | 0.00/122 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b65a3a7fa5a749ccbbeb636286fee6e2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/4.02k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"18f07323cc8c41aabce2db328cd88f94"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6b83fc19dd964dfb84421204ae38db6c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/550 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9a5bcf8a6d884886824ba118833cf712"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/265M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2512499bac5d4b0495a2bec65601f1cc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/450 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2eea443326324d57bae050b75838cfb3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ea2beea8883440a7973ef07a64f46c72"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c1420708b923463193406422e60a6db7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"71118df0f2f64618b402fbe2a6814d06"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1617: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be deprecated in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"1_Pooling/config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"109acea33de24ed9aaf8846515581685"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/33818 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c200c4e67397422db92199d0d2b0941d"}},"metadata":{}},{"name":"stdout","text":"임베딩 된 벡터 수 : 1082168\n","output_type":"stream"}],"execution_count":6},{"cell_type":"markdown","source":"# 인덱스 정의 및 데이터 추가","metadata":{}},{"cell_type":"code","source":"index = faiss.IndexIDMap(faiss.IndexFlatIP(768))\nindex.add_with_ids(encoded_data, np.array(range(0, len(data))))\n\nfaiss.write_index(index, 'abc_news')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:27:20.522416Z","iopub.execute_input":"2024-11-05T03:27:20.522835Z","iopub.status.idle":"2024-11-05T03:27:27.367414Z","shell.execute_reply.started":"2024-11-05T03:27:20.522794Z","shell.execute_reply":"2024-11-05T03:27:27.366117Z"}},"outputs":[],"execution_count":14},{"cell_type":"markdown","source":"# 검색 및 시간 측정","metadata":{}},{"cell_type":"code","source":"def search(query):\n   t = time.time()\n   query_vector = model.encode([query])\n   k = 5\n   top_k = index.search(query_vector, k)\n   print('total time: {}'.format(time.time() - t))\n   return [data[_id] for _id in top_k[1].tolist()[0]]\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:21:30.220146Z","iopub.execute_input":"2024-11-05T03:21:30.220486Z","iopub.status.idle":"2024-11-05T03:21:30.227129Z","shell.execute_reply.started":"2024-11-05T03:21:30.220453Z","shell.execute_reply":"2024-11-05T03:21:30.226228Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"query = str(input())\nresults = search(query)\n\nprint('results :')\nfor result in results:\n   print('\\t', result)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:26:07.011011Z","iopub.execute_input":"2024-11-05T03:26:07.011378Z","iopub.status.idle":"2024-11-05T03:26:10.618069Z","shell.execute_reply.started":"2024-11-05T03:26:07.011344Z","shell.execute_reply":"2024-11-05T03:26:10.617350Z"}},"outputs":[{"output_type":"stream","name":"stdin","text":" Underwater Forest Discovered\n"},{"output_type":"display_data","data":{"text/plain":"Batches:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"95e3f1a5834a47a498b6754ba345081b"}},"metadata":{}},{"name":"stdout","text":"total time: 1.0794849395751953\nresults :\n\t underwater loop\n\t thriving underwater antarctic garden discovered\n\t baton goes underwater in wa\n\t underwater footage shows inside doomed costa\n\t underwater uluru found off wa coast\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"Underwater Forest Discovered\ntotal time: 1.069244384765625\nresults :\n     underwater loop\n     thriving underwater antarctic garden discovered\n     baton goes underwater in wa\n     underwater footage shows inside doomed costa\n     underwater uluru found off wa coast\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-05T03:27:31.241070Z","iopub.execute_input":"2024-11-05T03:27:31.241459Z","iopub.status.idle":"2024-11-05T03:27:31.247890Z","shell.execute_reply.started":"2024-11-05T03:27:31.241414Z","shell.execute_reply":"2024-11-05T03:27:31.246715Z"}},"outputs":[{"traceback":["\u001b[0;36m  Cell \u001b[0;32mIn[15], line 1\u001b[0;36m\u001b[0m\n\u001b[0;31m    Underwater Forest Discovered\u001b[0m\n\u001b[0m               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"],"ename":"SyntaxError","evalue":"invalid syntax (1202178544.py, line 1)","output_type":"error"}],"execution_count":15}]}