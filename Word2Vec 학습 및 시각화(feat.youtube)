{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceType":"datasetVersion","sourceId":9759901,"datasetId":5976461}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pip install konlpy","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:10:28.801766Z","iopub.execute_input":"2024-10-30T05:10:28.802195Z","iopub.status.idle":"2024-10-30T05:10:42.194030Z","shell.execute_reply.started":"2024-10-30T05:10:28.802155Z","shell.execute_reply":"2024-10-30T05:10:42.192410Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"Collecting konlpy\n  Downloading konlpy-0.6.0-py2.py3-none-any.whl.metadata (1.9 kB)\nCollecting JPype1>=0.7.0 (from konlpy)\n  Downloading JPype1-1.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.9 kB)\nRequirement already satisfied: lxml>=4.1.0 in /opt/conda/lib/python3.10/site-packages (from konlpy) (5.3.0)\nRequirement already satisfied: numpy>=1.6 in /opt/conda/lib/python3.10/site-packages (from konlpy) (1.26.4)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from JPype1>=0.7.0->konlpy) (21.3)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->JPype1>=0.7.0->konlpy) (3.1.2)\nDownloading konlpy-0.6.0-py2.py3-none-any.whl (19.4 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m19.4/19.4 MB\u001b[0m \u001b[31m60.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading JPype1-1.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (488 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m488.6/488.6 kB\u001b[0m \u001b[31m25.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hInstalling collected packages: JPype1, konlpy\nSuccessfully installed JPype1-1.5.0 konlpy-0.6.0\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}]},{"cell_type":"code","source":"import kagglehub","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:05:24.377323Z","iopub.execute_input":"2024-10-30T05:05:24.377794Z","iopub.status.idle":"2024-10-30T05:05:24.642222Z","shell.execute_reply.started":"2024-10-30T05:05:24.377754Z","shell.execute_reply":"2024-10-30T05:05:24.641126Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport urllib.request\nfrom gensim.models.word2vec import Word2Vec\nfrom konlpy.tag import Okt","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:11:19.455726Z","iopub.execute_input":"2024-10-30T05:11:19.456192Z","iopub.status.idle":"2024-10-30T05:11:19.484105Z","shell.execute_reply.started":"2024-10-30T05:11:19.456142Z","shell.execute_reply":"2024-10-30T05:11:19.482737Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"youtube_data_path = kagglehub.dataset_download('mungjae/youtube-data')","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:05:26.500199Z","iopub.execute_input":"2024-10-30T05:05:26.500601Z","iopub.status.idle":"2024-10-30T05:05:27.799273Z","shell.execute_reply.started":"2024-10-30T05:05:26.500558Z","shell.execute_reply":"2024-10-30T05:05:27.798132Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df=pd.read_csv(f\"{youtube_data_path}/youtube_comments.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:08:48.853523Z","iopub.execute_input":"2024-10-30T05:08:48.854009Z","iopub.status.idle":"2024-10-30T05:08:48.893367Z","shell.execute_reply.started":"2024-10-30T05:08:48.853966Z","shell.execute_reply":"2024-10-30T05:08:48.892227Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"import pandas as pd","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:06:15.633049Z","iopub.execute_input":"2024-10-30T05:06:15.634392Z","iopub.status.idle":"2024-10-30T05:06:15.639082Z","shell.execute_reply.started":"2024-10-30T05:06:15.634341Z","shell.execute_reply":"2024-10-30T05:06:15.637801Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:08:55.027479Z","iopub.execute_input":"2024-10-30T05:08:55.028244Z","iopub.status.idle":"2024-10-30T05:08:55.052421Z","shell.execute_reply.started":"2024-10-30T05:08:55.028201Z","shell.execute_reply":"2024-10-30T05:08:55.051361Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"         Video_ID                                            Comment\n0     Bnkv92xceyI              ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ이건 간닼ㅋㅋㅋㅋ 저 고정좀 해주세욬ㅋㅋㅋㅋㅋㅋ\n1     Bnkv92xceyI                                          ㅋㅋㅋㅋㅋㅋㅋ최고\n2     Bnkv92xceyI                                  그림체 ㄹㅇ 개구ㅐ여워 ㅋㅋㅋㅌ\n3     Bnkv92xceyI                                               ㅋㅋㅋㅋ\n4     Bnkv92xceyI                                   아 그림체 존나귀엽넼ㅋㅋㅋㅋㅋ\n...           ...                                                ...\n4879  2-gm2hv5xnU                                      미친ㅋㅋㅋㅋㅋㅣㄱㅋ기ㅣㅣ\n4880  2-gm2hv5xnU                                시식을 하랬더니 아예 식사를 하셨네\n4881  2-gm2hv5xnU                          개쳐웃었네 ㅋㅋ 백종원을 주접쟁이만들고 ㅋㅋㅋ\n4882  2-gm2hv5xnU                                          쳔집 천재다...\n4883  2-gm2hv5xnU  심지어 또 없어유? 는 저 둘의 요리한테 한말도 아님 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ\\n악...\n\n[4884 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Video_ID</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bnkv92xceyI</td>\n      <td>ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ이건 간닼ㅋㅋㅋㅋ 저 고정좀 해주세욬ㅋㅋㅋㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bnkv92xceyI</td>\n      <td>ㅋㅋㅋㅋㅋㅋㅋ최고</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bnkv92xceyI</td>\n      <td>그림체 ㄹㅇ 개구ㅐ여워 ㅋㅋㅋㅌ</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bnkv92xceyI</td>\n      <td>ㅋㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bnkv92xceyI</td>\n      <td>아 그림체 존나귀엽넼ㅋㅋㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4879</th>\n      <td>2-gm2hv5xnU</td>\n      <td>미친ㅋㅋㅋㅋㅋㅣㄱㅋ기ㅣㅣ</td>\n    </tr>\n    <tr>\n      <th>4880</th>\n      <td>2-gm2hv5xnU</td>\n      <td>시식을 하랬더니 아예 식사를 하셨네</td>\n    </tr>\n    <tr>\n      <th>4881</th>\n      <td>2-gm2hv5xnU</td>\n      <td>개쳐웃었네 ㅋㅋ 백종원을 주접쟁이만들고 ㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>4882</th>\n      <td>2-gm2hv5xnU</td>\n      <td>쳔집 천재다...</td>\n    </tr>\n    <tr>\n      <th>4883</th>\n      <td>2-gm2hv5xnU</td>\n      <td>심지어 또 없어유? 는 저 둘의 요리한테 한말도 아님 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ\\n악...</td>\n    </tr>\n  </tbody>\n</table>\n<p>4884 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"print(len(df))","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:12:16.512372Z","iopub.execute_input":"2024-10-30T05:12:16.512964Z","iopub.status.idle":"2024-10-30T05:12:16.519564Z","shell.execute_reply.started":"2024-10-30T05:12:16.512911Z","shell.execute_reply":"2024-10-30T05:12:16.518038Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"4884\n","output_type":"stream"}]},{"cell_type":"code","source":"print(df.isnull().values.any())","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:12:25.908424Z","iopub.execute_input":"2024-10-30T05:12:25.908926Z","iopub.status.idle":"2024-10-30T05:12:25.916933Z","shell.execute_reply.started":"2024-10-30T05:12:25.908885Z","shell.execute_reply":"2024-10-30T05:12:25.915584Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"False\n","output_type":"stream"}]},{"cell_type":"code","source":"df = df.dropna(how = 'any') # Null 값이 존재하는 행 제거\nprint(df.isnull().values.any()) # Null 값이 존재하는지 확인","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:12:42.652703Z","iopub.execute_input":"2024-10-30T05:12:42.653132Z","iopub.status.idle":"2024-10-30T05:12:42.665360Z","shell.execute_reply.started":"2024-10-30T05:12:42.653092Z","shell.execute_reply":"2024-10-30T05:12:42.664326Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"False\n","output_type":"stream"}]},{"cell_type":"code","source":"print(len(df)) # 리뷰 개수 출력","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:12:51.693002Z","iopub.execute_input":"2024-10-30T05:12:51.693899Z","iopub.status.idle":"2024-10-30T05:12:51.699289Z","shell.execute_reply.started":"2024-10-30T05:12:51.693854Z","shell.execute_reply":"2024-10-30T05:12:51.697985Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"4884\n","output_type":"stream"}]},{"cell_type":"code","source":"# 정규 표현식을 통한 한글 외 문자 제거\ndf['Comment'] = df['Comment'].str.replace(\"[^ㄱ-ㅎㅏ-ㅣ가-힣 ]\",\"\", regex=True)","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:25:31.048140Z","iopub.execute_input":"2024-10-30T05:25:31.048589Z","iopub.status.idle":"2024-10-30T05:25:31.068753Z","shell.execute_reply.started":"2024-10-30T05:25:31.048550Z","shell.execute_reply":"2024-10-30T05:25:31.067380Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:25:40.218258Z","iopub.execute_input":"2024-10-30T05:25:40.218688Z","iopub.status.idle":"2024-10-30T05:25:40.232409Z","shell.execute_reply.started":"2024-10-30T05:25:40.218632Z","shell.execute_reply":"2024-10-30T05:25:40.231272Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"         Video_ID                                            Comment\n0     Bnkv92xceyI              ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ이건 간닼ㅋㅋㅋㅋ 저 고정좀 해주세욬ㅋㅋㅋㅋㅋㅋ\n1     Bnkv92xceyI                                          ㅋㅋㅋㅋㅋㅋㅋ최고\n2     Bnkv92xceyI                                  그림체 ㄹㅇ 개구ㅐ여워 ㅋㅋㅋㅌ\n3     Bnkv92xceyI                                               ㅋㅋㅋㅋ\n4     Bnkv92xceyI                                   아 그림체 존나귀엽넼ㅋㅋㅋㅋㅋ\n...           ...                                                ...\n4879  2-gm2hv5xnU                                      미친ㅋㅋㅋㅋㅋㅣㄱㅋ기ㅣㅣ\n4880  2-gm2hv5xnU                                시식을 하랬더니 아예 식사를 하셨네\n4881  2-gm2hv5xnU                          개쳐웃었네 ㅋㅋ 백종원을 주접쟁이만들고 ㅋㅋㅋ\n4882  2-gm2hv5xnU                                             쳔집 천재다\n4883  2-gm2hv5xnU  심지어 또 없어유 는 저 둘의 요리한테 한말도 아님 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ악마의 ...\n\n[4884 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Video_ID</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bnkv92xceyI</td>\n      <td>ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ이건 간닼ㅋㅋㅋㅋ 저 고정좀 해주세욬ㅋㅋㅋㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bnkv92xceyI</td>\n      <td>ㅋㅋㅋㅋㅋㅋㅋ최고</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bnkv92xceyI</td>\n      <td>그림체 ㄹㅇ 개구ㅐ여워 ㅋㅋㅋㅌ</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bnkv92xceyI</td>\n      <td>ㅋㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bnkv92xceyI</td>\n      <td>아 그림체 존나귀엽넼ㅋㅋㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4879</th>\n      <td>2-gm2hv5xnU</td>\n      <td>미친ㅋㅋㅋㅋㅋㅣㄱㅋ기ㅣㅣ</td>\n    </tr>\n    <tr>\n      <th>4880</th>\n      <td>2-gm2hv5xnU</td>\n      <td>시식을 하랬더니 아예 식사를 하셨네</td>\n    </tr>\n    <tr>\n      <th>4881</th>\n      <td>2-gm2hv5xnU</td>\n      <td>개쳐웃었네 ㅋㅋ 백종원을 주접쟁이만들고 ㅋㅋㅋ</td>\n    </tr>\n    <tr>\n      <th>4882</th>\n      <td>2-gm2hv5xnU</td>\n      <td>쳔집 천재다</td>\n    </tr>\n    <tr>\n      <th>4883</th>\n      <td>2-gm2hv5xnU</td>\n      <td>심지어 또 없어유 는 저 둘의 요리한테 한말도 아님 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ악마의 ...</td>\n    </tr>\n  </tbody>\n</table>\n<p>4884 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"pip install tqdm","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:28:55.571001Z","iopub.execute_input":"2024-10-30T05:28:55.571432Z","iopub.status.idle":"2024-10-30T05:29:06.720892Z","shell.execute_reply.started":"2024-10-30T05:28:55.571390Z","shell.execute_reply":"2024-10-30T05:29:06.718999Z"},"trusted":true},"execution_count":34,"outputs":[{"name":"stdout","text":"Requirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (4.66.4)\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}]},{"cell_type":"code","source":"import tqdm","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:30:46.225497Z","iopub.execute_input":"2024-10-30T05:30:46.225975Z","iopub.status.idle":"2024-10-30T05:30:46.230605Z","shell.execute_reply.started":"2024-10-30T05:30:46.225932Z","shell.execute_reply":"2024-10-30T05:30:46.229532Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"# 불용어 정의\nstopwords = ['의','가','이','은','들','는','좀','잘','걍','과','도','를','으로','자','에','와','한','하다']\n\n# 형태소 분석기 OKT를 사용한 토큰화 작업 (다소 시간 소요)\nokt = Okt()\n\ntokenized_data = []\nfor sentence in tqdm.tqdm(df['Comment']):\n    tokenized_sentence = okt.morphs(sentence, stem=True) # 토큰화\n    stopwords_removed_sentence = [word for word in tokenized_sentence if not word in stopwords] # 불용어 제거\n    tokenized_data.append(stopwords_removed_sentence)","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:31:08.124745Z","iopub.execute_input":"2024-10-30T05:31:08.125885Z","iopub.status.idle":"2024-10-30T05:31:35.090222Z","shell.execute_reply.started":"2024-10-30T05:31:08.125826Z","shell.execute_reply":"2024-10-30T05:31:35.089119Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stderr","text":"100%|██████████| 4884/4884 [00:26<00:00, 181.23it/s]\n","output_type":"stream"}]},{"cell_type":"code","source":"# 리뷰 길이 분포 확인\nprint('댓글의 최대 길이 :',max(len(review) for review in tokenized_data))\nprint('댓글의 평균 길이 :',sum(map(len, tokenized_data))/len(tokenized_data))\nplt.hist([len(review) for review in tokenized_data], bins=50)\nplt.xlabel('length of samples')\nplt.ylabel('number of samples')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:34:20.615230Z","iopub.execute_input":"2024-10-30T05:34:20.616066Z","iopub.status.idle":"2024-10-30T05:34:20.957290Z","shell.execute_reply.started":"2024-10-30T05:34:20.616019Z","shell.execute_reply":"2024-10-30T05:34:20.956186Z"},"trusted":true},"execution_count":40,"outputs":[{"name":"stdout","text":"댓글의 최대 길이 : 383\n댓글의 평균 길이 : 12.845208845208845\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"from gensim.models import Word2Vec\n\nmodel = Word2Vec(sentences = tokenized_data, vector_size = 100, window = 5, min_count = 5, workers = 4, sg = 0)","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:34:38.987874Z","iopub.execute_input":"2024-10-30T05:34:38.988294Z","iopub.status.idle":"2024-10-30T05:34:39.302855Z","shell.execute_reply.started":"2024-10-30T05:34:38.988257Z","shell.execute_reply":"2024-10-30T05:34:39.301744Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"# 완성된 임베딩 매트릭스의 크기 확인\nmodel.wv.vectors.shape","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:34:44.966434Z","iopub.execute_input":"2024-10-30T05:34:44.966847Z","iopub.status.idle":"2024-10-30T05:34:44.973961Z","shell.execute_reply.started":"2024-10-30T05:34:44.966809Z","shell.execute_reply":"2024-10-30T05:34:44.972788Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"(1936, 100)"},"metadata":{}}]},{"cell_type":"code","source":"print(model.wv.most_similar(\"백종원\"))","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:34:59.680578Z","iopub.execute_input":"2024-10-30T05:34:59.681165Z","iopub.status.idle":"2024-10-30T05:34:59.692581Z","shell.execute_reply.started":"2024-10-30T05:34:59.681114Z","shell.execute_reply":"2024-10-30T05:34:59.691236Z"},"trusted":true},"execution_count":43,"outputs":[{"name":"stdout","text":"[('귀엽다', 0.9992498755455017), ('웃기다', 0.9989243745803833), ('짜다', 0.9988510012626648), ('인가', 0.9988226294517517), ('진짜', 0.9987691640853882), ('아', 0.998693585395813), ('넘다', 0.9986708164215088), ('개', 0.9986667037010193), ('나', 0.9986459612846375), ('요', 0.9984041452407837)]\n","output_type":"stream"}]},{"cell_type":"code","source":"print(model.wv.most_similar(\"나폴리\"))","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:35:17.968489Z","iopub.execute_input":"2024-10-30T05:35:17.969881Z","iopub.status.idle":"2024-10-30T05:35:17.977436Z","shell.execute_reply.started":"2024-10-30T05:35:17.969818Z","shell.execute_reply":"2024-10-30T05:35:17.976071Z"},"trusted":true},"execution_count":45,"outputs":[{"name":"stdout","text":"[('맛', 0.9991573691368103), ('음식', 0.9990820288658142), ('임', 0.999050498008728), ('그리고', 0.9990473985671997), ('때문', 0.9990212917327881), ('우승', 0.9990174174308777), ('이다', 0.9990028738975525), ('많다', 0.9989924430847168), ('않다', 0.9989891052246094), ('차다', 0.9989517331123352)]\n","output_type":"stream"}]},{"cell_type":"code","source":"model.wv.save_word2vec_format('df')","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:36:34.616708Z","iopub.execute_input":"2024-10-30T05:36:34.617176Z","iopub.status.idle":"2024-10-30T05:36:34.764333Z","shell.execute_reply.started":"2024-10-30T05:36:34.617132Z","shell.execute_reply":"2024-10-30T05:36:34.762970Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"!python -m gensim.scripts.word2vec2tensor --input df --output df","metadata":{"execution":{"iopub.status.busy":"2024-10-30T05:36:36.710771Z","iopub.execute_input":"2024-10-30T05:36:36.711222Z","iopub.status.idle":"2024-10-30T05:36:43.734758Z","shell.execute_reply.started":"2024-10-30T05:36:36.711182Z","shell.execute_reply":"2024-10-30T05:36:43.733043Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}