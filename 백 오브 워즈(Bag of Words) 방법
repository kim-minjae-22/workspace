{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-29T02:55:22.613975Z","iopub.execute_input":"2024-10-29T02:55:22.614374Z","iopub.status.idle":"2024-10-29T02:55:23.850139Z","shell.execute_reply.started":"2024-10-29T02:55:22.614335Z","shell.execute_reply":"2024-10-29T02:55:23.848848Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"pip install konlpy","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:55:32.512877Z","iopub.execute_input":"2024-10-29T02:55:32.513392Z","iopub.status.idle":"2024-10-29T02:55:46.152590Z","shell.execute_reply.started":"2024-10-29T02:55:32.513355Z","shell.execute_reply":"2024-10-29T02:55:46.151217Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Collecting konlpy\n  Downloading konlpy-0.6.0-py2.py3-none-any.whl.metadata (1.9 kB)\nCollecting JPype1>=0.7.0 (from konlpy)\n  Downloading JPype1-1.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.9 kB)\nRequirement already satisfied: lxml>=4.1.0 in /opt/conda/lib/python3.10/site-packages (from konlpy) (5.3.0)\nRequirement already satisfied: numpy>=1.6 in /opt/conda/lib/python3.10/site-packages (from konlpy) (1.26.4)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from JPype1>=0.7.0->konlpy) (21.3)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->JPype1>=0.7.0->konlpy) (3.1.2)\nDownloading konlpy-0.6.0-py2.py3-none-any.whl (19.4 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m19.4/19.4 MB\u001b[0m \u001b[31m50.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0mm\n\u001b[?25hDownloading JPype1-1.5.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (488 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m488.6/488.6 kB\u001b[0m \u001b[31m23.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hInstalling collected packages: JPype1, konlpy\nSuccessfully installed JPype1-1.5.0 konlpy-0.6.0\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}]},{"cell_type":"code","source":"from konlpy.tag import Okt\n\nokt = Okt()\n\ndef build_bag_of_words(document):\n  # 온점 제거 및 형태소 분석\n  document = document.replace('.', '')\n  tokenized_document = okt.morphs(document)\n\n  word_to_index = {}\n  bow = []\n\n  for word in tokenized_document:  \n    if word not in word_to_index.keys():\n      word_to_index[word] = len(word_to_index)  \n      # BoW에 전부 기본값 1을 넣는다.\n      bow.insert(len(word_to_index) - 1, 1)\n    else:\n      # 재등장하는 단어의 인덱스\n      index = word_to_index.get(word)\n      # 재등장한 단어는 해당하는 인덱스의 위치에 1을 더한다.\n      bow[index] = bow[index] + 1\n\n  return word_to_index, bow\n","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:56:08.517469Z","iopub.execute_input":"2024-10-29T02:56:08.517922Z","iopub.status.idle":"2024-10-29T02:56:09.653897Z","shell.execute_reply.started":"2024-10-29T02:56:08.517875Z","shell.execute_reply":"2024-10-29T02:56:09.652710Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"doc1 = \"정부가 발표하는 물가상승률과 소비자가 느끼는 물가상승률은 다르다.\"\nvocab, bow = build_bag_of_words(doc1)\nprint('vocabulary :', vocab)\nprint('bag of words vector :', bow)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:56:09.655725Z","iopub.execute_input":"2024-10-29T02:56:09.656092Z","iopub.status.idle":"2024-10-29T02:56:14.795878Z","shell.execute_reply.started":"2024-10-29T02:56:09.656055Z","shell.execute_reply":"2024-10-29T02:56:14.794551Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"vocabulary : {'정부': 0, '가': 1, '발표': 2, '하는': 3, '물가상승률': 4, '과': 5, '소비자': 6, '느끼는': 7, '은': 8, '다르다': 9}\nbag of words vector : [1, 2, 1, 1, 2, 1, 1, 1, 1, 1]\n","output_type":"stream"}]},{"cell_type":"code","source":"# Bag of Words의 다른 예제\ndoc2 = '소비자는 주로 소비하는 상품을 기준으로 물가상승률을 느낀다.'\n\nvocab, bow = build_bag_of_words(doc2)\nprint('vocabulary :', vocab)\nprint('bag of words vector :', bow)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:56:14.797159Z","iopub.execute_input":"2024-10-29T02:56:14.797599Z","iopub.status.idle":"2024-10-29T02:56:14.846634Z","shell.execute_reply.started":"2024-10-29T02:56:14.797564Z","shell.execute_reply":"2024-10-29T02:56:14.845525Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"vocabulary : {'소비자': 0, '는': 1, '주로': 2, '소비': 3, '하는': 4, '상품': 5, '을': 6, '기준': 7, '으로': 8, '물가상승률': 9, '느낀다': 10}\nbag of words vector : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]\n","output_type":"stream"}]},{"cell_type":"code","source":"# 문서3: 정부가 발표하는 물가상승률과 소비자가 느끼는 물가상승률은 다르다. \ndoc3 = doc1 + ' ' + doc2\nvocab, bow = build_bag_of_words(doc3)\nprint('vocabulary :', vocab)\nprint('bag of words vector :', bow)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:56:29.460487Z","iopub.execute_input":"2024-10-29T02:56:29.460963Z","iopub.status.idle":"2024-10-29T02:56:29.520049Z","shell.execute_reply.started":"2024-10-29T02:56:29.460915Z","shell.execute_reply":"2024-10-29T02:56:29.518698Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"vocabulary : {'정부': 0, '가': 1, '발표': 2, '하는': 3, '물가상승률': 4, '과': 5, '소비자': 6, '느끼는': 7, '은': 8, '다르다': 9, '는': 10, '주로': 11, '소비': 12, '상품': 13, '을': 14, '기준': 15, '으로': 16, '느낀다': 17}\nbag of words vector : [1, 2, 1, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1]\n","output_type":"stream"}]},{"cell_type":"code","source":"# 3. CountVectorizer 클래스로 BoW 만들기\nfrom sklearn.feature_extraction.text import CountVectorizer\n\ncorpus = ['you know I want your love. because I love you.']\nvector = CountVectorizer()\n\n# 코퍼스로부터 각 단어의 빈도수를 기록\nprint('bag of words vector :', vector.fit_transform(corpus).toarray()) \n\n# 각 단어의 인덱스가 어떻게 부여되었는지를 출력\nprint('vocabulary :',vector.vocabulary_)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:56:46.918039Z","iopub.execute_input":"2024-10-29T02:56:46.918496Z","iopub.status.idle":"2024-10-29T02:56:47.468458Z","shell.execute_reply.started":"2024-10-29T02:56:46.918456Z","shell.execute_reply":"2024-10-29T02:56:47.467223Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"bag of words vector : [[1 1 2 1 2 1]]\nvocabulary : {'you': 4, 'know': 1, 'want': 3, 'your': 5, 'love': 2, 'because': 0}\n","output_type":"stream"}]},{"cell_type":"code","source":"# 4. 불용어를 제거한 BoW 만들기\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom nltk.corpus import stopwords","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:57:01.939822Z","iopub.execute_input":"2024-10-29T02:57:01.940398Z","iopub.status.idle":"2024-10-29T02:57:02.776916Z","shell.execute_reply.started":"2024-10-29T02:57:01.940354Z","shell.execute_reply":"2024-10-29T02:57:02.775831Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"# 1) 사용자가 직접 정의한 불용어 사용\ntext = [\"Family is not an important thing. It's everything.\"]\nvect = CountVectorizer(stop_words=[\"the\", \"a\", \"an\", \"is\", \"not\"])\nprint('bag of words vector :',vect.fit_transform(text).toarray())\nprint('vocabulary :',vect.vocabulary_)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:57:14.940774Z","iopub.execute_input":"2024-10-29T02:57:14.941189Z","iopub.status.idle":"2024-10-29T02:57:14.949411Z","shell.execute_reply.started":"2024-10-29T02:57:14.941149Z","shell.execute_reply":"2024-10-29T02:57:14.948141Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"bag of words vector : [[1 1 1 1 1]]\nvocabulary : {'family': 1, 'important': 2, 'thing': 4, 'it': 3, 'everything': 0}\n","output_type":"stream"}]},{"cell_type":"code","source":"# 3) NLTK에서 지원하는 불용어 사용\ntext = [\"Family is not an important thing. It's everything.\"]\nstop_words = stopwords.words(\"english\")\nvect = CountVectorizer(stop_words=stop_words)\nprint('bag of words vector :',vect.fit_transform(text).toarray()) \nprint('vocabulary :',vect.vocabulary_)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:57:32.716319Z","iopub.execute_input":"2024-10-29T02:57:32.717211Z","iopub.status.idle":"2024-10-29T02:57:32.730945Z","shell.execute_reply.started":"2024-10-29T02:57:32.717167Z","shell.execute_reply":"2024-10-29T02:57:32.729665Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"bag of words vector : [[1 1 1 1]]\nvocabulary : {'family': 1, 'important': 2, 'thing': 3, 'everything': 0}\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}