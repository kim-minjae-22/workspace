{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-29T02:46:56.846870Z","iopub.execute_input":"2024-10-29T02:46:56.848092Z","iopub.status.idle":"2024-10-29T02:46:56.864446Z","shell.execute_reply.started":"2024-10-29T02:46:56.848032Z","shell.execute_reply":"2024-10-29T02:46:56.863280Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"/kaggle/input/the-movies-dataset/ratings.csv\n/kaggle/input/the-movies-dataset/links_small.csv\n/kaggle/input/the-movies-dataset/credits.csv\n/kaggle/input/the-movies-dataset/keywords.csv\n/kaggle/input/the-movies-dataset/movies_metadata.csv\n/kaggle/input/the-movies-dataset/ratings_small.csv\n/kaggle/input/the-movies-dataset/links.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"# 코사인 유사도(Cosine Similarity)\n# Numpy를 사용해서 코사인 유사도를 계산하는 함수를 구현하고 \n# 각 문서 벡터 간의 코사인 유사도를 계산\n# 코사인 유사도 1 = 방향이 같음, 0 = 수직, -1 = 정반대\n\n\nimport numpy as np\nfrom numpy import dot\nfrom numpy.linalg import norm\n\ndef cos_sim(A, B):\n    return dot(A, B)/(norm(A)*norm(B))\n\ndoc1 = np.array([0,1,1,1])\ndoc2 = np.array([1,0,1,1])\ndoc3 = np.array([2,0,2,2])\n\nprint('문서 1과 문서2의 유사도 :',cos_sim(doc1, doc2))\nprint('문서 1과 문서3의 유사도 :',cos_sim(doc1, doc3))\nprint('문서 2와 문서3의 유사도 :',cos_sim(doc2, doc3))\n\n#문서 1과 문서2의 유사도 : 0.67\n#문서 1과 문서3의 유사도 : 0.67\n#문서 2과 문서3의 유사도 : 1.00","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:43:19.048566Z","iopub.execute_input":"2024-10-29T02:43:19.048991Z","iopub.status.idle":"2024-10-29T02:43:19.058169Z","shell.execute_reply.started":"2024-10-29T02:43:19.048936Z","shell.execute_reply":"2024-10-29T02:43:19.057123Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"문서 1과 문서2의 유사도 : 0.6666666666666667\n문서 1과 문서3의 유사도 : 0.6666666666666667\n문서 2와 문서3의 유사도 : 1.0000000000000002\n","output_type":"stream"}]},{"cell_type":"code","source":"import kagglehub\n\n# Download latest version\npath = kagglehub.dataset_download(\"rounakbanik/the-movies-dataset\")\n\nprint(\"Path to dataset files:\", path)\n\n# movies_metadata.csv 데이터를 받기위한 코드","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:44:48.796665Z","iopub.execute_input":"2024-10-29T02:44:48.797094Z","iopub.status.idle":"2024-10-29T02:44:55.368202Z","shell.execute_reply.started":"2024-10-29T02:44:48.797056Z","shell.execute_reply":"2024-10-29T02:44:55.366874Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Path to dataset files: /kaggle/input/the-movies-dataset\n","output_type":"stream"}]},{"cell_type":"code","source":"/kaggle/input/the-movies-dataset/ratings.csv\n/kaggle/input/the-movies-dataset/links_small.csv\n/kaggle/input/the-movies-dataset/credits.csv\n/kaggle/input/the-movies-dataset/keywords.csv\n/kaggle/input/the-movies-dataset/movies_metadata.csv\n/kaggle/input/the-movies-dataset/ratings_small.csv\n/kaggle/input/the-movies-dataset/links.csv","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 유사도를 이용한 추천 시스템 구현\nimport pandas as pd\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\n\ndata = pd.read_csv('/kaggle/input/the-movies-dataset/movies_metadata.csv', low_memory=False)\ndata.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-10-29T02:47:41.398449Z","iopub.execute_input":"2024-10-29T02:47:41.399179Z","iopub.status.idle":"2024-10-29T02:47:42.578898Z","shell.execute_reply.started":"2024-10-29T02:47:41.399132Z","shell.execute_reply":"2024-10-29T02:47:42.576944Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   adult                              belongs_to_collection    budget  \\\n0  False  {'id': 10194, 'name': 'Toy Story Collection', ...  30000000   \n1  False                                                NaN  65000000   \n\n                                              genres  \\\n0  [{'id': 16, 'name': 'Animation'}, {'id': 35, '...   \n1  [{'id': 12, 'name': 'Adventure'}, {'id': 14, '...   \n\n                               homepage    id    imdb_id original_language  \\\n0  http://toystory.disney.com/toy-story   862  tt0114709                en   \n1                                   NaN  8844  tt0113497                en   \n\n  original_title                                           overview  ...  \\\n0      Toy Story  Led by Woody, Andy's toys live happily in his ...  ...   \n1        Jumanji  When siblings Judy and Peter discover an encha...  ...   \n\n  release_date      revenue runtime  \\\n0   1995-10-30  373554033.0    81.0   \n1   1995-12-15  262797249.0   104.0   \n\n                                    spoken_languages    status  \\\n0           [{'iso_639_1': 'en', 'name': 'English'}]  Released   \n1  [{'iso_639_1': 'en', 'name': 'English'}, {'iso...  Released   \n\n                                     tagline      title  video vote_average  \\\n0                                        NaN  Toy Story  False          7.7   \n1  Roll the dice and unleash the excitement!    Jumanji  False          6.9   \n\n  vote_count  \n0     5415.0  \n1     2413.0  \n\n[2 rows x 24 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>adult</th>\n      <th>belongs_to_collection</th>\n      <th>budget</th>\n      <th>genres</th>\n      <th>homepage</th>\n      <th>id</th>\n      <th>imdb_id</th>\n      <th>original_language</th>\n      <th>original_title</th>\n      <th>overview</th>\n      <th>...</th>\n      <th>release_date</th>\n      <th>revenue</th>\n      <th>runtime</th>\n      <th>spoken_languages</th>\n      <th>status</th>\n      <th>tagline</th>\n      <th>title</th>\n      <th>video</th>\n      <th>vote_average</th>\n      <th>vote_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>False</td>\n      <td>{'id': 10194, 'name': 'Toy Story Collection', ...</td>\n      <td>30000000</td>\n      <td>[{'id': 16, 'name': 'Animation'}, {'id': 35, '...</td>\n      <td>http://toystory.disney.com/toy-story</td>\n      <td>862</td>\n      <td>tt0114709</td>\n      <td>en</td>\n      <td>Toy Story</td>\n      <td>Led by Woody, Andy's toys live happily in his ...</td>\n      <td>...</td>\n      <td>1995-10-30</td>\n      <td>373554033.0</td>\n      <td>81.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>NaN</td>\n      <td>Toy Story</td>\n      <td>False</td>\n      <td>7.7</td>\n      <td>5415.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>False</td>\n      <td>NaN</td>\n      <td>65000000</td>\n      <td>[{'id': 12, 'name': 'Adventure'}, {'id': 14, '...</td>\n      <td>NaN</td>\n      <td>8844</td>\n      <td>tt0113497</td>\n      <td>en</td>\n      <td>Jumanji</td>\n      <td>When siblings Judy and Peter discover an encha...</td>\n      <td>...</td>\n      <td>1995-12-15</td>\n      <td>262797249.0</td>\n      <td>104.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}, {'iso...</td>\n      <td>Released</td>\n      <td>Roll the dice and unleash the excitement!</td>\n      <td>Jumanji</td>\n      <td>False</td>\n      <td>6.9</td>\n      <td>2413.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows × 24 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}